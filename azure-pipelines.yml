# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  SolutionPath: '2-Backend-RESTful-API/phase-2-back-end.sln'
  # ReactRootFolder: '2-Backend-RESTful-API'
  # ReactBuildFolder: '$(ReactRootFolder)/build'
  
steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'
# - script: |
#     cd $(ReactRootFolder)
#     npm install
#     npm run build
#     cd ..
#   displayName: 'npm install and build'
# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: $(ReactBuildFolder)
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/FrontEnd/$(Build.BuildId).zip'
#     replaceExistingArchive: true
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/FrontEnd'
#     ArtifactName: 'front-end'
#     publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: $(SolutionPath)
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '2-Backend-RESTful-API/phase-2-back-end/phase-2-back-end.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/BackEnd'
    zipAfterPublish: true
    modifyOutputPath: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/BackEnd'
    ArtifactName: 'back-end'
    publishLocation: 'Container'
  